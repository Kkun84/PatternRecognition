[2020-07-15 02:11:19,562][__main__][INFO] - 
aug_n: 19
classifier:
  class: sklearn.svm.SVC
seed: 0
transforms:
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 15
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 0
    translate:
    - 0.2
    - 0.2
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 0
    scale:
    - 0.8
    - 1.2
- class: torchvision.transforms.ToTensor
- class: torchvision.transforms.RandomErasing
  params:
    p: 0.2
    ratio:
    - 0.5
    - 2
    scale:
    - 0.1
    - 0.1
- class: torchvision.transforms.ToPILImage

[2020-07-15 02:11:19,562][__main__][INFO] - train_list, test_list
[2020-07-15 02:11:19,613][__main__][INFO] - len(train_list)=2000
[2020-07-15 02:11:19,613][__main__][INFO] - len(test_list)=10000
[2020-07-15 02:11:19,613][__main__][INFO] - train_images, test_images
[2020-07-15 02:11:19,924][__main__][INFO] - len(image_list)=2000
[2020-07-15 02:11:20,908][__main__][INFO] - len(image_list)=10000
[2020-07-15 02:11:20,908][__main__][INFO] - train_class, test_class
[2020-07-15 02:11:20,908][__main__][INFO] - len(class_list)=2000
[2020-07-15 02:11:20,909][__main__][INFO] - len(class_list)=10000
[2020-07-15 02:11:20,910][__main__][INFO] - transforms=Compose(
    RandomAffine(degrees=(-15, 15))
    RandomAffine(degrees=(0, 0), translate=[0.2, 0.2])
    RandomAffine(degrees=(0, 0), scale=[0.8, 1.2])
    ToTensor()
    <torchvision.transforms.transforms.RandomErasing object at 0x7fa1bfcf07f0>
    ToPILImage()
)
[2020-07-15 02:11:28,581][__main__][INFO] - len(image_list)=40000
[2020-07-15 02:11:28,582][__main__][INFO] - len(class_list)=40000
[2020-07-15 02:11:29,497][__main__][INFO] - classifier.fit
[2020-07-15 02:23:08,844][__main__][INFO] - classifier.predict
[2020-07-15 02:26:11,130][__main__][INFO] - confusion_matrix=
[[968   1   0   0   4  11   3   0  12   1]
 [  0 979  13   4   1   0   0   1   2   0]
 [  3   1 947   3  12   1   3   7  18   5]
 [  2   6  12 925   1  21   0   9  19   5]
 [  5   1   2   0 919   1  30   2   8  32]
 [  4   1   0  36   4 927   7   1  13   7]
 [ 12   3   0   0   6   9 964   0   6   0]
 [  1   9   8   5  20   4   0 894  13  46]
 [  8   4   6   4   5  19   7   1 942   4]
 [  5   3   0  15  11   4   1  14  33 914]]
[2020-07-15 02:26:11,131][__main__][INFO] - confusion_matrix_prob=
[[0.968 0.001 0.    0.    0.004 0.011 0.003 0.    0.012 0.001]
 [0.    0.979 0.013 0.004 0.001 0.    0.    0.001 0.002 0.   ]
 [0.003 0.001 0.947 0.003 0.012 0.001 0.003 0.007 0.018 0.005]
 [0.002 0.006 0.012 0.925 0.001 0.021 0.    0.009 0.019 0.005]
 [0.005 0.001 0.002 0.    0.919 0.001 0.03  0.002 0.008 0.032]
 [0.004 0.001 0.    0.036 0.004 0.927 0.007 0.001 0.013 0.007]
 [0.012 0.003 0.    0.    0.006 0.009 0.964 0.    0.006 0.   ]
 [0.001 0.009 0.008 0.005 0.02  0.004 0.    0.894 0.013 0.046]
 [0.008 0.004 0.006 0.004 0.005 0.019 0.007 0.001 0.942 0.004]
 [0.005 0.003 0.    0.015 0.011 0.004 0.001 0.014 0.033 0.914]]
[2020-07-15 02:26:11,133][__main__][INFO] - ac_score=0.9379
[2020-07-15 02:26:11,133][__main__][INFO] - best  1: 0.979
[2020-07-15 02:26:11,133][__main__][INFO] - worst 7: 0.894
[2020-07-15 02:26:11,133][__main__][INFO] - max_index=(7, 9): 46
[2020-07-15 02:26:11,142][__main__][INFO] - classification_report=
              precision    recall  f1-score   support

           0     0.9603    0.9680    0.9641      1000
           1     0.9712    0.9790    0.9751      1000
           2     0.9585    0.9470    0.9527      1000
           3     0.9325    0.9250    0.9287      1000
           4     0.9349    0.9190    0.9269      1000
           5     0.9298    0.9270    0.9284      1000
           6     0.9498    0.9640    0.9568      1000
           7     0.9623    0.8940    0.9269      1000
           8     0.8837    0.9420    0.9119      1000
           9     0.9014    0.9140    0.9076      1000

    accuracy                         0.9379     10000
   macro avg     0.9384    0.9379    0.9379     10000
weighted avg     0.9384    0.9379    0.9379     10000

