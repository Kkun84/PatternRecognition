[2020-07-15 00:21:15,003][__main__][INFO] - 
aug_n: 9
classifier:
  class: sklearn.svm.SVC
seed: 0
transforms:
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 15
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 0
    scale:
    - 0.8
    - 1.2
- class: torchvision.transforms.ToTensor
- class: add_noise.AddNoise
  params:
    mean: 0
    std: 0.01
- class: torchvision.transforms.ToPILImage

[2020-07-15 00:21:15,004][__main__][INFO] - train_list, test_list
[2020-07-15 00:21:15,054][__main__][INFO] - len(train_list)=2000
[2020-07-15 00:21:15,054][__main__][INFO] - len(test_list)=10000
[2020-07-15 00:21:15,054][__main__][INFO] - train_images, test_images
[2020-07-15 00:21:15,332][__main__][INFO] - len(image_list)=2000
[2020-07-15 00:21:16,253][__main__][INFO] - len(image_list)=10000
[2020-07-15 00:21:16,253][__main__][INFO] - train_class, test_class
[2020-07-15 00:21:16,253][__main__][INFO] - len(class_list)=2000
[2020-07-15 00:21:16,261][__main__][INFO] - len(class_list)=10000
[2020-07-15 00:21:16,262][__main__][INFO] - transforms=Compose(
    RandomAffine(degrees=(-15, 15))
    RandomAffine(degrees=(0, 0), scale=[0.8, 1.2])
    ToTensor()
    <add_noise.AddNoise object at 0x7f442aae4a00>
    ToPILImage()
)
[2020-07-15 00:21:19,376][__main__][INFO] - len(image_list)=20000
[2020-07-15 00:21:19,376][__main__][INFO] - len(class_list)=20000
[2020-07-15 00:21:20,070][__main__][INFO] - classifier.fit
[2020-07-15 00:22:22,082][__main__][INFO] - classifier.predict
[2020-07-15 00:23:11,881][__main__][INFO] - confusion_matrix=
[[983   1   0   0   5   5   2   0   4   0]
 [  0 983   8   2   1   1   1   1   2   1]
 [  8   4 941   2  12   1   9   9  12   2]
 [  6   1  20 919   0  25   3   8  13   5]
 [  3   1   1   0 946   0  13   1   8  27]
 [  8   3   0  25   2 941  11   0   8   2]
 [  9   3   8   0   2  12 964   0   2   0]
 [  3   7  11   3  14   0   1 930  11  20]
 [  3   6   4  12   1   7   6   0 954   7]
 [  2   1   3  13  18   3   0  15  13 932]]
[2020-07-15 00:23:11,882][__main__][INFO] - confusion_matrix_prob=
[[0.983 0.001 0.    0.    0.005 0.005 0.002 0.    0.004 0.   ]
 [0.    0.983 0.008 0.002 0.001 0.001 0.001 0.001 0.002 0.001]
 [0.008 0.004 0.941 0.002 0.012 0.001 0.009 0.009 0.012 0.002]
 [0.006 0.001 0.02  0.919 0.    0.025 0.003 0.008 0.013 0.005]
 [0.003 0.001 0.001 0.    0.946 0.    0.013 0.001 0.008 0.027]
 [0.008 0.003 0.    0.025 0.002 0.941 0.011 0.    0.008 0.002]
 [0.009 0.003 0.008 0.    0.002 0.012 0.964 0.    0.002 0.   ]
 [0.003 0.007 0.011 0.003 0.014 0.    0.001 0.93  0.011 0.02 ]
 [0.003 0.006 0.004 0.012 0.001 0.007 0.006 0.    0.954 0.007]
 [0.002 0.001 0.003 0.013 0.018 0.003 0.    0.015 0.013 0.932]]
[2020-07-15 00:23:11,884][__main__][INFO] - ac_score=0.9493
[2020-07-15 00:23:11,884][__main__][INFO] - best  0: 0.983
[2020-07-15 00:23:11,884][__main__][INFO] - worst 3: 0.919
[2020-07-15 00:23:11,884][__main__][INFO] - max_index=(4, 9): 27
[2020-07-15 00:23:11,892][__main__][INFO] - classification_report=
              precision    recall  f1-score   support

           0     0.9590    0.9830    0.9709      1000
           1     0.9733    0.9830    0.9781      1000
           2     0.9448    0.9410    0.9429      1000
           3     0.9416    0.9190    0.9302      1000
           4     0.9451    0.9460    0.9455      1000
           5     0.9457    0.9410    0.9434      1000
           6     0.9545    0.9640    0.9592      1000
           7     0.9647    0.9300    0.9470      1000
           8     0.9289    0.9540    0.9413      1000
           9     0.9357    0.9320    0.9339      1000

    accuracy                         0.9493     10000
   macro avg     0.9493    0.9493    0.9492     10000
weighted avg     0.9493    0.9493    0.9492     10000

