[2020-07-15 00:42:32,973][__main__][INFO] - 
aug_n: 15
classifier:
  class: sklearn.svm.SVC
seed: 0
transforms:
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 10
- class: torchvision.transforms.RandomAffine
  params:
    degrees: 0
    scale:
    - 0.8
    - 1.2
- class: torchvision.transforms.ToTensor
- class: add_noise.AddNoise
  params:
    mean: 0
    std: 0.01
- class: torchvision.transforms.ToPILImage

[2020-07-15 00:42:32,974][__main__][INFO] - train_list, test_list
[2020-07-15 00:42:33,024][__main__][INFO] - len(train_list)=2000
[2020-07-15 00:42:33,024][__main__][INFO] - len(test_list)=10000
[2020-07-15 00:42:33,024][__main__][INFO] - train_images, test_images
[2020-07-15 00:42:33,320][__main__][INFO] - len(image_list)=2000
[2020-07-15 00:42:34,290][__main__][INFO] - len(image_list)=10000
[2020-07-15 00:42:34,290][__main__][INFO] - train_class, test_class
[2020-07-15 00:42:34,291][__main__][INFO] - len(class_list)=2000
[2020-07-15 00:42:34,292][__main__][INFO] - len(class_list)=10000
[2020-07-15 00:42:34,293][__main__][INFO] - transforms=Compose(
    RandomAffine(degrees=(-10, 10))
    RandomAffine(degrees=(0, 0), scale=[0.8, 1.2])
    ToTensor()
    <add_noise.AddNoise object at 0x7f18c9fcaa00>
    ToPILImage()
)
[2020-07-15 00:42:39,461][__main__][INFO] - len(image_list)=32000
[2020-07-15 00:42:39,462][__main__][INFO] - len(class_list)=32000
[2020-07-15 00:42:40,278][__main__][INFO] - classifier.fit
[2020-07-15 00:44:30,922][__main__][INFO] - classifier.predict
[2020-07-15 00:45:31,805][__main__][INFO] - confusion_matrix=
[[982   1   0   1   5   6   3   0   2   0]
 [  0 984   8   0   1   1   1   1   3   1]
 [  5   4 946   4  11   1   8   9  11   1]
 [  7   2  22 913   0  27   3   7  15   4]
 [  5   1   4   0 938   0  15   1  10  26]
 [  6   5   0  25   2 941  10   0   8   3]
 [ 10   3   3   1   2  14 965   0   2   0]
 [  3   7  17   5  17   0   1 926   6  18]
 [  2   6   5  11   1   9   7   1 950   8]
 [  4   2   3  13  19   3   0  14  24 918]]
[2020-07-15 00:45:31,806][__main__][INFO] - confusion_matrix_prob=
[[0.982 0.001 0.    0.001 0.005 0.006 0.003 0.    0.002 0.   ]
 [0.    0.984 0.008 0.    0.001 0.001 0.001 0.001 0.003 0.001]
 [0.005 0.004 0.946 0.004 0.011 0.001 0.008 0.009 0.011 0.001]
 [0.007 0.002 0.022 0.913 0.    0.027 0.003 0.007 0.015 0.004]
 [0.005 0.001 0.004 0.    0.938 0.    0.015 0.001 0.01  0.026]
 [0.006 0.005 0.    0.025 0.002 0.941 0.01  0.    0.008 0.003]
 [0.01  0.003 0.003 0.001 0.002 0.014 0.965 0.    0.002 0.   ]
 [0.003 0.007 0.017 0.005 0.017 0.    0.001 0.926 0.006 0.018]
 [0.002 0.006 0.005 0.011 0.001 0.009 0.007 0.001 0.95  0.008]
 [0.004 0.002 0.003 0.013 0.019 0.003 0.    0.014 0.024 0.918]]
[2020-07-15 00:45:31,814][__main__][INFO] - ac_score=0.9463
[2020-07-15 00:45:31,814][__main__][INFO] - best  1: 0.984
[2020-07-15 00:45:31,814][__main__][INFO] - worst 3: 0.913
[2020-07-15 00:45:31,814][__main__][INFO] - max_index=(3, 5): 27
[2020-07-15 00:45:31,826][__main__][INFO] - classification_report=
              precision    recall  f1-score   support

           0     0.9590    0.9820    0.9704      1000
           1     0.9695    0.9840    0.9767      1000
           2     0.9385    0.9460    0.9422      1000
           3     0.9383    0.9130    0.9255      1000
           4     0.9418    0.9380    0.9399      1000
           5     0.9391    0.9410    0.9401      1000
           6     0.9526    0.9650    0.9588      1000
           7     0.9656    0.9260    0.9454      1000
           8     0.9214    0.9500    0.9355      1000
           9     0.9377    0.9180    0.9277      1000

    accuracy                         0.9463     10000
   macro avg     0.9463    0.9463    0.9462     10000
weighted avg     0.9463    0.9463    0.9462     10000

